plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace 'com.github.bouyio.cyancore'
    compileSdk 34

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    compileOnly 'org.jetbrains:annotations:13.0'
    compileOnly "androidx.annotation:annotation:1.6.0"

    compileOnly 'org.firstinspires.ftc:RobotCore:10.3.0'
    compileOnly 'org.firstinspires.ftc:Hardware:10.3.0'
    compileOnly 'org.firstinspires.ftc:FtcCommon:10.3.0'
    compileOnly 'org.reflections:reflections:0.10.2'
}
afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

                groupId = 'com.github.bouyio.cyancore'
                artifactId = 'Cyan-FTC'
                version = '1.2.3'


                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    // Add your dependencies here if needed
                }

                tasks.named("publishMavenPublicationToMavenLocal") {
                    dependsOn tasks.named("assembleRelease")
                    dependsOn tasks.named("generateJavadoc")
                }
            }
        }
    }

    task generateJavadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs

        options.encoding = "UTF-8"
        options.memberLevel = JavadocMemberLevel.PUBLIC
        options.author = true
        options.version = true
        failOnError false // Avoid build failing on doc errors

    }
}